diff --git a/.idea/539a402cb8447785cacc2d92a3db2af3.iml b/.idea/539a402cb8447785cacc2d92a3db2af3.iml
new file mode 100644
index 0000000000000000000000000000000000000000..24643cc37449b4bde54411a80b8ed61258225e34
--- /dev/null
+++ b/.idea/539a402cb8447785cacc2d92a3db2af3.iml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="WEB_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/.tmp" />
+      <excludeFolder url="file://$MODULE_DIR$/temp" />
+      <excludeFolder url="file://$MODULE_DIR$/tmp" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
diff --git a/.idea/codeStyles/Project.xml b/.idea/codeStyles/Project.xml
new file mode 100644
index 0000000000000000000000000000000000000000..08b2a18d5701808a493aee3f98e2eedca1520fd1
--- /dev/null
+++ b/.idea/codeStyles/Project.xml
@@ -0,0 +1,49 @@
+<component name="ProjectCodeStyleConfiguration">
+  <code_scheme name="Project" version="173">
+    <HTMLCodeStyleSettings>
+      <option name="HTML_SPACE_INSIDE_EMPTY_TAG" value="true" />
+    </HTMLCodeStyleSettings>
+    <JSCodeStyleSettings version="0">
+      <option name="FORCE_SEMICOLON_STYLE" value="true" />
+      <option name="SPACE_BEFORE_FUNCTION_LEFT_PARENTH" value="false" />
+      <option name="USE_DOUBLE_QUOTES" value="false" />
+      <option name="FORCE_QUOTE_STYlE" value="true" />
+      <option name="ENFORCE_TRAILING_COMMA" value="WhenMultiline" />
+      <option name="SPACES_WITHIN_OBJECT_LITERAL_BRACES" value="true" />
+      <option name="SPACES_WITHIN_IMPORTS" value="true" />
+    </JSCodeStyleSettings>
+    <TypeScriptCodeStyleSettings version="0">
+      <option name="FORCE_SEMICOLON_STYLE" value="true" />
+      <option name="SPACE_BEFORE_FUNCTION_LEFT_PARENTH" value="false" />
+      <option name="USE_DOUBLE_QUOTES" value="false" />
+      <option name="FORCE_QUOTE_STYlE" value="true" />
+      <option name="ENFORCE_TRAILING_COMMA" value="WhenMultiline" />
+      <option name="SPACES_WITHIN_OBJECT_LITERAL_BRACES" value="true" />
+      <option name="SPACES_WITHIN_IMPORTS" value="true" />
+    </TypeScriptCodeStyleSettings>
+    <codeStyleSettings language="HTML">
+      <option name="SOFT_MARGINS" value="80" />
+      <indentOptions>
+        <option name="INDENT_SIZE" value="2" />
+        <option name="CONTINUATION_INDENT_SIZE" value="2" />
+        <option name="TAB_SIZE" value="2" />
+      </indentOptions>
+    </codeStyleSettings>
+    <codeStyleSettings language="JavaScript">
+      <option name="SOFT_MARGINS" value="80" />
+      <indentOptions>
+        <option name="INDENT_SIZE" value="2" />
+        <option name="CONTINUATION_INDENT_SIZE" value="2" />
+        <option name="TAB_SIZE" value="2" />
+      </indentOptions>
+    </codeStyleSettings>
+    <codeStyleSettings language="TypeScript">
+      <option name="SOFT_MARGINS" value="80" />
+      <indentOptions>
+        <option name="INDENT_SIZE" value="2" />
+        <option name="CONTINUATION_INDENT_SIZE" value="2" />
+        <option name="TAB_SIZE" value="2" />
+      </indentOptions>
+    </codeStyleSettings>
+  </code_scheme>
+</component>
\ No newline at end of file
diff --git a/.idea/codeStyles/codeStyleConfig.xml b/.idea/codeStyles/codeStyleConfig.xml
new file mode 100644
index 0000000000000000000000000000000000000000..79ee123c2b23e069e35ed634d687e17f731cc702
--- /dev/null
+++ b/.idea/codeStyles/codeStyleConfig.xml
@@ -0,0 +1,5 @@
+<component name="ProjectCodeStyleConfiguration">
+  <state>
+    <option name="USE_PER_PROJECT_SETTINGS" value="true" />
+  </state>
+</component>
\ No newline at end of file
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
new file mode 100644
index 0000000000000000000000000000000000000000..97626ba45445dc9f3afa66e6a149914dc39e3df6
--- /dev/null
+++ b/.idea/encodings.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="PROJECT" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/git_toolbox_blame.xml b/.idea/git_toolbox_blame.xml
new file mode 100644
index 0000000000000000000000000000000000000000..7dc124965d28403ec2545a24d7d1cd1fec1f57d8
--- /dev/null
+++ b/.idea/git_toolbox_blame.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GitToolBoxBlameSettings">
+    <option name="version" value="2" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
index 0000000000000000000000000000000000000000..27bf489a832321ae49c8d261a11956ccff31ac2c
--- /dev/null
+++ b/.idea/inspectionProfiles/Project_Default.xml
@@ -0,0 +1,8 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="CssBrowserCompatibilityForProperties" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="Eslint" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="t" enabled="false" level="WEAK WARNING" enabled_by_default="false" />
+  </profile>
+</component>
\ No newline at end of file
diff --git a/.idea/jsLinters/eslint.xml b/.idea/jsLinters/eslint.xml
new file mode 100644
index 0000000000000000000000000000000000000000..541945bb0819b8ff4a3dae9431632ebd10e6f98b
--- /dev/null
+++ b/.idea/jsLinters/eslint.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="EslintConfiguration">
+    <option name="fix-on-save" value="true" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
index 0000000000000000000000000000000000000000..cfdc9ac8cef5108b887715328b151a413f7696cb
--- /dev/null
+++ b/.idea/misc.xml
@@ -0,0 +1,79 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="JavaScriptSettings">
+    <option name="languageLevel" value="ES6" />
+  </component>
+  <component name="ProjectInspectionProfilesVisibleTreeState">
+    <entry key="Project Default">
+      <profile-state>
+        <expanded-state>
+          <State>
+            <id />
+          </State>
+          <State>
+            <id>Code style issuesJavaScript</id>
+          </State>
+          <State>
+            <id>CoffeeScript</id>
+          </State>
+          <State>
+            <id>Control flow issuesJavaScript</id>
+          </State>
+          <State>
+            <id>ECMAScript 6 migration aidsJavaScript</id>
+          </State>
+          <State>
+            <id>General</id>
+          </State>
+          <State>
+            <id>GeneralJavaScript</id>
+          </State>
+          <State>
+            <id>JavaScript</id>
+          </State>
+          <State>
+            <id>JavaScript validity issuesJavaScript</id>
+          </State>
+          <State>
+            <id>Meteor</id>
+          </State>
+          <State>
+            <id>Node.jsJavaScript</id>
+          </State>
+          <State>
+            <id>Perl5</id>
+          </State>
+          <State>
+            <id>Perl5 POD</id>
+          </State>
+          <State>
+            <id>Potentially confusing code constructsJavaScript</id>
+          </State>
+          <State>
+            <id>Probable bugsCoffeeScript</id>
+          </State>
+          <State>
+            <id>Probable bugsJavaScript</id>
+          </State>
+          <State>
+            <id>Template Toolkit 2</id>
+          </State>
+          <State>
+            <id>Vue</id>
+          </State>
+          <State>
+            <id>XPath</id>
+          </State>
+          <State>
+            <id>XSLT</id>
+          </State>
+        </expanded-state>
+        <selected-state>
+          <State>
+            <id>AngularJS</id>
+          </State>
+        </selected-state>
+      </profile-state>
+    </entry>
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
index 0000000000000000000000000000000000000000..5d2db756e95d602649dd36d626d8543630d00bba
--- /dev/null
+++ b/.idea/modules.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/539a402cb8447785cacc2d92a3db2af3.iml" filepath="$PROJECT_DIR$/.idea/539a402cb8447785cacc2d92a3db2af3.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/prettier.xml b/.idea/prettier.xml
new file mode 100644
index 0000000000000000000000000000000000000000..727b8b5331dafaf054eb5f1d43a0531b5f2b8205
--- /dev/null
+++ b/.idea/prettier.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="PrettierConfiguration">
+    <option name="myRunOnSave" value="true" />
+    <option name="myRunOnReformat" value="true" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/package.json b/package.json
index c689feedd4fec1a7efefedb49ef7af6dbe1ead8b..00a1a00d17b1203b7d88bfde8d8a87b0f297904b 100644
--- a/package.json
+++ b/package.json
@@ -3,6 +3,7 @@
   "version": "0.2.0",
   "description": "A tiny wrapper for commit-analyzer and release-notes-generator which works with squashed MRs",
   "main": "src/index.js",
+  "type": "module",
   "repository": {
     "type": "git",
     "url": "git+https://github.com/romap0/semantic-release-unsquash.git"
@@ -32,14 +33,14 @@
     "eslint:fix": "eslint src --fix"
   },
   "dependencies": {
-    "@semantic-release/commit-analyzer": "^9.0.2",
-    "@semantic-release/release-notes-generator": "^10.0.3"
+    "@semantic-release/commit-analyzer": "^13.0.0",
+    "@semantic-release/release-notes-generator": "^14.0.1"
   },
   "devDependencies": {
     "@types/jest": "^29.4.0",
     "eslint": "^8.33.0",
     "eslint-config-universe": "^11.1.1",
-    "jest": "^29.4.2",
+    "jest": "^29.7.0",
     "prettier": "^2.8.3"
   }
 }
diff --git a/src/get-unsquashed-commits.js b/src/get-unsquashed-commits.js
index f32124a4f35a67d19fba8b22420d5e195977c703..15cbccd9d810df9c5bddd898f2300ba61197b5a1 100644
--- a/src/get-unsquashed-commits.js
+++ b/src/get-unsquashed-commits.js
@@ -1,26 +1,28 @@
-const getUnsquashedCommits = (context) => {
+export function getUnsquashedCommits(context) {
   const { commits } = context;
 
   return commits.reduce((acc, commit) => {
+    console.log(commit);
     if (!commit.body.startsWith('* ')) {
       return [...acc, commit];
     }
 
     const squashedCommits = commit.body.split('*').map((line) => line.trim());
-
+    squashedCommits.for(commit => console.log(commit));
     return [
       ...acc,
       ...squashedCommits.map((squashedCommit) => {
+
         const [subject, , ...body] = squashedCommit.split('\n');
-        return {
+        const d = {
           ...commit,
           subject,
           body: body.join('\n'),
           message: squashedCommit,
         };
+        console.log(d);
+        return d;
       }),
     ];
   }, []);
-};
-
-module.exports = { getUnsquashedCommits };
+}
diff --git a/src/get-unsquashed-commits.spec.js b/src/get-unsquashed-commits.spec.js
index 9be5ea84e80ff6ec9cbdae90f66e4bcf0012a521..1c30ffe543574725753c04122216fa4205c8a378 100644
--- a/src/get-unsquashed-commits.spec.js
+++ b/src/get-unsquashed-commits.spec.js
@@ -1,4 +1,5 @@
-const { getUnsquashedCommits } = require('./get-unsquashed-commits');
+import { getUnsquashedCommits } from './get-unsquashed-commits';
+
 
 describe(getUnsquashedCommits.name, () => {
   it('should return unsquashed commits', () => {
diff --git a/src/index.js b/src/index.js
index c562453c68b28db4096a6b40dc2dfb7dad83bb13..890f21e114b0684324d038ea0f6b4dba0e85cb0f 100644
--- a/src/index.js
+++ b/src/index.js
@@ -1,13 +1,12 @@
-const {
-  analyzeCommits: originalAnalyzeCommits,
-} = require('@semantic-release/commit-analyzer');
-const {
-  generateNotes: originalGenerateNotes,
-} = require('@semantic-release/release-notes-generator');
+import { analyzeCommits as originalAnalyzeCommits } from '@semantic-release/commit-analyzer';
 
-const { getUnsquashedCommits } = require('./get-unsquashed-commits');
+import { generateNotes as originalGenerateNotes } from '@semantic-release/release-notes-generator';
 
-const analyzeCommits = async (pluginConfig, context) => {
+
+import { getUnsquashedCommits } from './get-unsquashed-commits';
+
+
+export async function analyzeCommits(pluginConfig, context) {
   const { commitAnalyzerConfig } = pluginConfig || {};
   const commits = getUnsquashedCommits(context);
 
@@ -15,9 +14,9 @@ const analyzeCommits = async (pluginConfig, context) => {
     ...context,
     commits,
   });
-};
+}
 
-const generateNotes = async (pluginConfig, context) => {
+export async function generateNotes(pluginConfig, context) {
   const { notesGeneratorConfig } = pluginConfig || {};
   const commits = getUnsquashedCommits(context);
 
@@ -25,6 +24,5 @@ const generateNotes = async (pluginConfig, context) => {
     ...context,
     commits,
   });
-};
+}
 
-module.exports = { analyzeCommits, generateNotes };
